Kendala saat training :
 - m: saat koneksi bermasalah training terputus maka harus mengulang dari awal
 - s: butuh metode resume training

 - m: saat pembuatan neural network, net yang di buat belum tentu cocok di propduction
 - s: butuh metode untuk test automatis kompatibilitas di production saat neural net di buat di awal

 - m: sintaks belepotan, spaghetti code karena proses oprek saat training
 - s: butuh manajemen code (packagin dan modularisasi)

 - m: banyak code yang berulang di tulis berkali - kali
 - s: harus dijadikan class dan fungsi untuk menjadikan dia reusable

 - m: pytorch adalah low level api, jadi cenderung sintaks jadi panjang
 - s: high level api untuk mempermudah training

 - m: banyak loss function yang tidak standard (dari paper penelitian) yang tidak tersedia langsung di framework
 - s: harus menterjemahkan dari formula matematika ke code

 - m: saat transisi dari research code ke production code, code nggak termanajemen dengan rapi (spaghetti code)
 - s: di butuhkan metode export dan import network dari research ke production

 - m: banyak high level api di luar, tapi code base nya sulit untuk di hack dan di kembangkan saat dibutuhkan
 - s: bikin sendiri high level api yang mudah di kembangkan  sendiri


jadi dengan library ini harapan nya, training bisa jadi lebih mudah dan akurat, code base lebih rapi dan termanajemen dengan baik, transisi dari research code ke production code lebih mudah, dan ketika ada paper baru yang mau di terapkan akan lebih mudah karena library di bangun sendiri (nggak perlu hack ke code nya orang)
